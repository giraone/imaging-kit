<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.giraone.imaging</groupId>
  <artifactId>imaging-kit</artifactId>
  <version>1.4.3-SNAPSHOT</version>

  <packaging>jar</packaging>

  <name>${project.artifactId}</name>
  <description>Utility JAR for imaging routines, e.g. thumbnail creation for PDF and bitmaps</description>
  <url>https://github.com/giraone/imaging-kit</url>

  <organization>
    <url>https://github.com/giraone</url>
    <name>GiraOne</name>
  </organization>
  <inceptionYear>2019</inceptionYear>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Hans Schuell</name>
      <organization>GiraOne</organization>
      <organizationUrl>https://github.com/giraone</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/giraone/imaging-kit.git</connection>
    <developerConnection>scm:git:git@github.com:giraone/giraone.git</developerConnection>
    <url>https://github.com/giraone/imaging-kit</url>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>Github</system>
    <url>https://github.com/giraone/imaging-kit/issues</url>
  </issueManagement>

  <ciManagement>
    <system>Travis</system>
    <url>https://travis-ci.org/giraone/imaging-kit</url>
  </ciManagement>

  <distributionManagement>
    <!-- Repository URL for snapshot deployment and download access -->
    <snapshotRepository>
      <id>central-snapshots</id>
      <url>https://central.sonatype.com/repository/maven-snapshots/</url>
    </snapshotRepository>
    <!-- Repository URL for release deployment, no download access! -->
    <repository>
      <id>ossrh-staging</id>
      <url>https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.release>17</maven.compiler.release>
    <java.version>${maven.compiler.release}</java.version>
    <!-- Production dependency versions -->
    <pdfbox.version>3.0.6</pdfbox.version>
    <slf4j.version>2.0.17</slf4j.version>
    <!-- Test dependency versions -->
    <junit.jupiter.version>6.0.0</junit.jupiter.version>
    <assertj.version>3.27.6</assertj.version>
    <!-- Plugin versions -->
    <maven-compiler-plugin.version>3.14.1</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>3.5.4</maven-surefire-plugin.version>
    <maven-source-plugin.version>3.3.1</maven-source-plugin.version>
    <maven-javadoc-plugin.version>3.12.0</maven-javadoc-plugin.version>
    <maven-deploy-plugin.version>3.1.4</maven-deploy-plugin.version>
    <maven-release-plugin.version>3.1.1</maven-release-plugin.version>
    <nexus-staging-maven-plugin.version>1.7.0</nexus-staging-maven-plugin.version>
    <maven-scm-provider-gitexe.version>2.2.1</maven-scm-provider-gitexe.version>
    <maven-scm-api.version>2.2.1</maven-scm-api.version>
    <maven-gpg-plugin.version>3.2.1</maven-gpg-plugin.version>
    <versions-maven-plugin.version>2.19.1</versions-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.14</jacoco-maven-plugin.version>
    <!-- Plugin properties -->
    <jacoco.reportFolder>${project.build.directory}/jacoco</jacoco.reportFolder>
    <jacoco.utReportFile>${jacoco.reportFolder}/jacoco.exec</jacoco.utReportFile>
  </properties>

  <dependencies>

    <!-- PDFBox for PDF image rendering -->
    <dependency>
      <groupId>org.apache.pdfbox</groupId>
      <artifactId>pdfbox</artifactId>
      <version>${pdfbox.version}</version>
    </dependency>

    <!-- SLF4J as logging framework -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <!-- TEST -->
    <!-- SLF4J simple implementation for testing -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <release>${maven.compiler.release}</release>
          <showDeprecation>true</showDeprecation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven-source-plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <configuration>
          <source>${maven.compiler.source}></source>
          <encoding>UTF-8</encoding>
          <failOnError>false</failOnError>
        </configuration>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven-deploy-plugin.version}</version>
        <executions>
          <execution>
            <id>default-deploy</id>
            <phase>deploy</phase>
            <goals>
              <goal>deploy</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven-release-plugin.version}</version>
        <configuration>
          <localCheckout>true</localCheckout>
          <pushChanges>false</pushChanges >
          <mavenExecutorId>forked-path</mavenExecutorId>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-provider-gitexe</artifactId>
            <version>${maven-scm-provider-gitexe.version}</version>
          </dependency>
          <dependency>
            <groupId>org.apache.maven.scm</groupId>
            <artifactId>maven-scm-api</artifactId>
            <version>${maven-scm-api.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <!-- GPG plugin (Optional for build, but required for Maven Central) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>${maven-gpg-plugin.version}</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
            <configuration>
              <passphraseServerId>gpg</passphraseServerId>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>${nexus-staging-maven-plugin.version}</version>
        <extensions>true</extensions>
        <!-- Publishing by using the Portal OSSRH Staging API - since July 2025-->
        <configuration>
          <!-- The serverId must match <server> in settings.xml -->
          <serverId>ossrh-staging</serverId>
          <nexusUrl>https://ossrh-staging-api.central.sonatype.com/</nexusUrl>
          <skipStaging>true</skipStaging>
          <!-- If not set to true, we must use extra HTTP POST /manual/upload/defaultRepository/com.giraone -->
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
        <executions>
          <execution>
            <id>default-deploy</id>
            <phase>deploy</phase>
            <goals>
              <goal>deploy</goal>
            </goals>
          </execution>
          <execution>
            <id>default-release</id>
            <phase>deploy</phase>
            <goals>
              <goal>release</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Keep versions up-to-date using mvn versions:update-properties && mvn versions:use-latest-versions -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${versions-maven-plugin.version}</version>
        <configuration>
          <rulesUri>file:///${project.basedir}/mvn-versions-rules.xml</rulesUri>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>pre-unit-tests</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <!-- Sets the path to the file which contains the execution data. -->
              <destFile>${jacoco.utReportFile}</destFile>
            </configuration>
          </execution>
          <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.utReportFile}</dataFile>
              <outputDirectory>${jacoco.reportFolder}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>